--- plain.txt	2016-07-19 14:35:43.767508582 +1000
+++ md.md	2016-07-19 14:35:45.211508522 +1000
@@ -1,282 +1,331 @@
-HYPERTEXT MARKUP LANGUAGE, commonly abbreviated as HTML, is the standard
-markup language used to create web pages. Along with CSS, and
-JavaScript, HTML is a cornerstone technology used to create web
-pages,[1] as well as to create user interfaces for mobile and web
-applications. Web browsers can read HTML files and render them into
-visible or audible web pages. HTML describes the structure of a website
-semantically and, before the advent of Cascading Style Sheets (CSS),
-included cues for the presentation or appearance of the document (web
-page), making it a markup language, rather than a programming language.
-
-HTML elements form the building blocks of HTML pages. HTML allows images
-and other objects to be embedded and it can be used to create
-interactive forms. It provides a means to create structured documents by
-denoting structural semantics for text such as headings, paragraphs,
-lists, links, quotes and other items. HTML elements are delineated by
-_tags_, written using angle brackets. Tags such as and introduce content
-into the page directly. Others such as surround and provide information
-about document text and may include other tags as sub-elements. Browsers
-do not display the HTML tags, but use them to interpret the content of
-the page.
-
-HTML can embed scripts written in languages such as JavaScript which
-affect the behavior of HTML web pages. HTML markup can also refer the
-browser to Cascading Style Sheets (CSS) to define the look and layout of
-text and other material. The World Wide Web Consortium (W3C), maintainer
+**HyperText Markup Language**, commonly abbreviated as **HTML**, is the
+standard [markup language](markup_language "wikilink") used to create
+[web pages](web_page "wikilink"). Along with
+[CSS](Cascading_Style_Sheets "wikilink"), and
+[JavaScript](JavaScript "wikilink"), HTML is a cornerstone technology
+used to create web pages,[^1] as well as to create user interfaces for
+mobile and [web applications](web_applications "wikilink"). [Web
+browsers](Web_browser "wikilink") can read HTML files and render them
+into visible or audible web pages. HTML describes the structure of a
+[website](website "wikilink") [semantically](semantic "wikilink") and,
+before the advent of Cascading Style Sheets (CSS), included cues for the
+presentation or appearance of the document (web page), making it a
+markup language, rather than a [programming
+language](programming_language "wikilink").
+
+[HTML elements](HTML_element "wikilink") form the building blocks of
+HTML pages. HTML allows [images](Img_(HTML_element) "wikilink") and
+other objects to be embedded and it can be used to create [interactive
+forms](Fieldset "wikilink"). It provides a means to create [structured
+documents](structured_document "wikilink") by denoting structural
+[semantics](semantics "wikilink") for text such as headings, paragraphs,
+lists, [links](Hyperlink "wikilink"), quotes and other items. HTML
+elements are delineated by *tags*, written using [angle
+brackets](Bracket#Angle_brackets "wikilink"). Tags such as and introduce
+content into the page directly. Others such as surround and provide
+information about document text and may include other tags as
+sub-elements. Browsers do not display the HTML tags, but use them to
+interpret the content of the page.
+
+HTML can embed [scripts](scripting_language "wikilink") written in
+languages such as [JavaScript](JavaScript "wikilink") which affect the
+behavior of HTML web pages. HTML markup can also refer the browser to
+[Cascading Style Sheets](Cascading_Style_Sheets "wikilink") (CSS) to
+define the look and layout of text and other material. The [World Wide
+Web Consortium](World_Wide_Web_Consortium "wikilink") (W3C), maintainer
 of both the HTML and the CSS standards, has encouraged the use of CSS
-over explicit presentational HTML since 1997.[2]
-
+over explicit presentational HTML since 1997.[^2]
 
 History
+-------
 
-[|thumb|right|The historic logo made by the W3C] [An example website
-written in HTML Code]
-
-Development
-
-[ Tim Berners-Lee ]
-
-In 1980, physicist Tim Berners-Lee, then a contractor at CERN, proposed
-and prototyped ENQUIRE, a system for CERN researchers to use and share
-documents. In 1989, Berners-Lee wrote a memo proposing an Internet-based
-hypertext system.[3] Berners-Lee specified HTML and wrote the browser
-and server software in late 1990. That year, Berners-Lee and CERN data
-systems engineer Robert Cailliau collaborated on a joint request for
-funding, but the project was not formally adopted by CERN. In his
-personal notes[4] from 1990 he listed[5] “some of the many areas in
-which hypertext is used” and put an encyclopedia first.
+![|thumb|right|The historic logo made by the
+W3C](Old HTML Logo.svg "fig:|thumb|right|The historic logo made by the W3C"){width="100"}
+![An example website written in HTML
+Code](HTML Example Code.png "fig:An example website written in HTML Code"){width="400"}
+
+### Development
+
+![ [Tim Berners-Lee](Tim_Berners-Lee "wikilink")
+](Tim Berners-Lee April 2009.jpg " Tim Berners-Lee ")
+
+In 1980, physicist [Tim Berners-Lee](Tim_Berners-Lee "wikilink"), then a
+contractor at [CERN](CERN "wikilink"), proposed and prototyped
+[ENQUIRE](ENQUIRE "wikilink"), a system for CERN researchers to use and
+share documents. In 1989, Berners-Lee wrote a memo proposing an
+[Internet](Internet "wikilink")-based [hypertext](hypertext "wikilink")
+system.[^3] Berners-Lee specified HTML and wrote the browser and server
+software in late 1990. That year, Berners-Lee and CERN data systems
+engineer [Robert Cailliau](Robert_Cailliau "wikilink") collaborated on a
+joint request for funding, but the project was not formally adopted by
+CERN. In his personal notes[^4] from 1990 he listed[^5] “some of the
+many areas in which hypertext is used” and put an encyclopedia first.
 
 The first publicly available description of HTML was a document called
 “HTML Tags”, first mentioned on the Internet by Tim Berners-Lee in late
-1991.[6][7] It describes 18 elements comprising the initial, relatively
-simple design of HTML. Except for the hyperlink tag, these were strongly
-influenced by SGMLguid, an in-house Standard Generalized Markup Language
-(SGML)-based documentation format at CERN. Eleven of these elements
-still exist in HTML 4.[8]
-
-HTML is a markup language that web browsers use to interpret and compose
-text, images, and other material into visual or audible web pages.
-Default characteristics for every item of HTML markup are defined in the
-browser, and these characteristics can be altered or enhanced by the web
-page designer's additional use of CSS. Many of the text elements are
-found in the 1988 ISO technical report TR 9537 _Techniques for using
-SGML_, which in turn covers the features of early text formatting
-languages such as that used by the RUNOFF command developed in the early
-1960s for the CTSS (Compatible Time-Sharing System) operating system:
-these formatting commands were derived from the commands used by
-typesetters to manually format documents. However, the SGML concept of
-generalized markup is based on elements (nested annotated ranges with
-attributes) rather than merely print effects, with also the separation
-of structure and markup; HTML has been progressively moved in this
-direction with CSS.
+1991.[^6][^7] It describes 18 elements comprising the initial,
+relatively simple design of HTML. Except for the hyperlink tag, these
+were strongly influenced by [SGMLguid](SGMLguid "wikilink"), an in-house
+[Standard Generalized Markup
+Language](Standard_Generalized_Markup_Language "wikilink") (SGML)-based
+documentation format at CERN. Eleven of these elements still exist in
+HTML 4.[^8]
+
+HTML is a [markup language](markup_language "wikilink") that [web
+browsers](web_browser "wikilink") use to interpret and
+[compose](Typesetting "wikilink") text, images, and other material into
+visual or audible web pages. Default characteristics for every item of
+HTML markup are defined in the browser, and these characteristics can be
+altered or enhanced by the web page designer's additional use of
+[CSS](Cascading_Style_Sheets "wikilink"). Many of the text elements are
+found in the 1988 ISO technical report TR 9537 *Techniques for using
+SGML*, which in turn covers the features of early text formatting
+languages such as that used by the [RUNOFF
+command](TYPSET_and_RUNOFF "wikilink") developed in the early 1960s for
+the [CTSS](Compatible_Time-Sharing_System "wikilink") (Compatible
+Time-Sharing System) operating system: these formatting commands were
+derived from the commands used by typesetters to manually format
+documents. However, the SGML concept of generalized markup is based on
+elements (nested annotated ranges with attributes) rather than merely
+print effects, with also the separation of structure and markup; HTML
+has been progressively moved in this direction with CSS.
 
 Berners-Lee considered HTML to be an application of SGML. It was
-formally defined as such by the Internet Engineering Task Force (IETF)
-with the mid-1993 publication of the first proposal for an HTML
-specification: “Hypertext Markup Language (HTML)” Internet-Draft by
-Berners-Lee and Dan Connolly, which included an SGML Document Type
-Definition to define the grammar.[9] The draft expired after six months,
-but was notable for its acknowledgment of the NCSA Mosaic browser's
-custom tag for embedding in-line images, reflecting the IETF's
-philosophy of basing standards on successful prototypes.[10] Similarly,
-Dave Raggett's competing Internet-Draft, “HTML+ (Hypertext Markup
-Format)”, from late 1993, suggested standardizing already-implemented
-features like tables and fill-out forms.[11]
+formally defined as such by the [Internet Engineering Task
+Force](Internet_Engineering_Task_Force "wikilink") (IETF) with the
+mid-1993 publication of the first proposal for an HTML specification:
+[“Hypertext Markup Language (HTML)”
+Internet-Draft](http://www.w3.org/MarkUp/draft-ietf-iiir-html-01.txt) by
+Berners-Lee and [Dan
+Connolly](Dan_Connolly_(computer_scientist) "wikilink"), which included
+an SGML [Document Type Definition](Document_Type_Definition "wikilink")
+to define the grammar.[^9] The draft expired after six months, but was
+notable for its acknowledgment of the [NCSA
+Mosaic](Mosaic_(web_browser) "wikilink") browser's custom tag for
+embedding in-line images, reflecting the IETF's philosophy of basing
+standards on successful prototypes.[^10] Similarly, [Dave
+Raggett](Dave_Raggett "wikilink")'s competing Internet-Draft, “HTML+
+(Hypertext Markup Format)”, from late 1993, suggested standardizing
+already-implemented features like tables and fill-out forms.[^11]
 
 After the HTML and HTML+ drafts expired in early 1994, the IETF created
 an HTML Working Group, which in 1995 completed “HTML 2.0”, the first
 HTML specification intended to be treated as a standard against which
-future implementations should be based.[12]
+future implementations should be based.[^12]
 
 Further development under the auspices of the IETF was stalled by
 competing interests. Since 1996, the HTML specifications have been
-maintained, with input from commercial software vendors, by the World
-Wide Web Consortium (W3C).[13] However, in 2000, HTML also became an
-international standard (ISO/IEC 15445:2000). HTML 4.01 was published in
-late 1999, with further errata published through 2001. In 2004,
-development began on HTML5 in the Web Hypertext Application Technology
-Working Group (WHATWG), which became a joint deliverable with the W3C in
-2008, and completed and standardized on 28 October 2014.[14]
+maintained, with input from commercial software vendors, by the [World
+Wide Web Consortium](World_Wide_Web_Consortium "wikilink") (W3C).[^13]
+However, in 2000, HTML also became an international standard
+([ISO](International_Organization_for_Standardization "wikilink")/[IEC](International_Electrotechnical_Commission "wikilink")
+15445:2000). HTML 4.01 was published in late 1999, with further errata
+published through 2001. In 2004, development began on HTML5 in the [Web
+Hypertext Application Technology Working
+Group](Web_Hypertext_Application_Technology_Working_Group "wikilink")
+(WHATWG), which became a joint deliverable with the W3C in 2008, and
+completed and standardized on 28 October 2014.[^14]
 
-HTML versions timeline
+### HTML versions timeline
 
-November 24, 1995: HTML 2.0 was published as IETF RFC 1866. Supplemental RFCs added capabilities:
+November 24, 1995: HTML 2.0 was published as IETF RFC 1866. Supplemental [RFCs](Request_for_Comments "wikilink") added capabilities:
 
-:* November 25, 1995: RFC 1867 (form-based file upload)
+:\* November 25, 1995: RFC 1867 (form-based file upload)
 
-:* May 1996: RFC 1942 (tables)
+:\* May 1996: RFC 1942 (tables)
 
-:* August 1996: RFC 1980 (client-side image maps)
+:\* August 1996: RFC 1980 (client-side image maps)
 
-:* January 1997: RFC 2070 (internationalization)
+:\* January 1997: RFC 2070
+([internationalization](internationalization_and_localization "wikilink"))
 
-January 14, 1997: HTML 3.2[15] was published as a W3C Recommendation. It was the first version developed and standardized exclusively by the W3C, as the IETF had closed its HTML Working Group on September 12, 1996.{{cite web
+January 14, 1997: HTML 3.2[^15] was published as a [W3C Recommendation](W3C_Recommendation "wikilink"). It was the first version developed and standardized exclusively by the W3C, as the IETF had closed its HTML Working Group on September 12, 1996.<ref>{{cite web
 
-|url=http://www.w3.org/MarkUp/HTML-WG/ |title=IETF HTML WG
-|accessdate=June 16, 2007 |quote=Note: This working group is closed}}
+|url=<http://www.w3.org/MarkUp/HTML-WG/> |title=IETF HTML WG
+|accessdate=June 16, 2007 |quote=Note: This working group is
+closed}}</ref>
 
-    Initially code-named “Wilbur”,[16] HTML 3.2 dropped math formulas
+:   Initially code-named “Wilbur”,[^16] HTML 3.2 dropped math formulas
     entirely, reconciled overlap among various proprietary extensions
-    and adopted most of Netscape's visual markup tags. Netscape's blink
-    element and Microsoft's marquee element were omitted due to a mutual
-    agreement between the two companies.[17] A markup for mathematical
+    and adopted most of [Netscape](Netscape "wikilink")'s visual
+    markup tags. Netscape's [blink element](blink_element "wikilink")
+    and [Microsoft](Microsoft "wikilink")'s [marquee
+    element](marquee_element "wikilink") were omitted due to a mutual
+    agreement between the two companies.[^17] A markup for mathematical
     formulas similar to that in HTML was not standardized until 14
-    months later in MathML.
+    months later in [MathML](MathML "wikilink").
 
-December 18, 1997: HTML 4.0[18] was published as a W3C Recommendation. It offers three variations:
+December 18, 1997: HTML 4.0[^18] was published as a W3C Recommendation. It offers three variations:
 
-:* Strict, in which deprecated elements are forbidden
+:\* Strict, in which deprecated elements are forbidden
 
-:* Transitional, in which deprecated elements are allowed
+:\* Transitional, in which deprecated elements are allowed
 
-:* Frameset, in which mostly only frame related elements are allowed.
+:\* Frameset, in which mostly only
+[frame](Framing_(World_Wide_Web) "wikilink") related elements are
+allowed.
 
-    Initially code-named “Cougar”,[19] HTML 4.0 adopted many
+:   Initially code-named “Cougar”,[^19] HTML 4.0 adopted many
     browser-specific element types and attributes, but at the same time
     sought to phase out Netscape's visual markup features by marking
-    them as deprecated in favor of style sheets. HTML 4 is an SGML
-    application conforming to ISO 8879 – SGML.[20]
-
-April 24, 1998: HTML 4.0[21] was reissued with minor edits without incrementing the version number.
-December 24, 1999: HTML 4.01[22] was published as a W3C Recommendation. It offers the same three variations as HTML 4.0 and its last errata were published on May 12, 2001.
-May 2000: ISO/IEC 15445:2000[23][24] ("ISO HTML", based on HTML 4.01 Strict) was published as an ISO/IEC international standard. In the ISO this standard falls in the domain of the ISO/IEC JTC1/SC34 (ISO/IEC Joint Technical Committee 1, Subcommittee 34 – Document description and processing languages).[25]
-    After HTML 4.01, there was no new version of HTML for many years as
+    them as [deprecated](deprecation "wikilink") in favor of
+    style sheets. HTML 4 is an SGML application conforming to ISO 8879 –
+    SGML.[^20]
+
+April 24, 1998: HTML 4.0[^21] was reissued with minor edits without incrementing the version number.\
+December 24, 1999: HTML 4.01[^22] was published as a W3C Recommendation. It offers the same three variations as HTML 4.0 and its last [errata](http://www.w3.org/MarkUp/html4-updates/errata) were published on May 12, 2001.\
+May 2000: ISO/IEC 15445:2000[^23][^24] ("[ISO](International_Organization_for_Standardization "wikilink") HTML", based on HTML 4.01 Strict) was published as an ISO/IEC international standard. In the ISO this standard falls in the domain of the [ISO/IEC JTC1/SC34](ISO/IEC_JTC1/SC34 "wikilink") (ISO/IEC Joint Technical Committee 1, Subcommittee 34 – Document description and processing languages).[^25]
+:   After HTML 4.01, there was no new version of HTML for many years as
     development of the parallel, XML-based language XHTML occupied the
     W3C's HTML Working Group through the early and mid-2000s.
 
-October 28, 2014: HTML5[26] was published as a W3C Recommendation.[27]
+October 28, 2014: HTML5[^26] was published as a W3C Recommendation.[^27]
 
-HTML draft version timeline
+#### HTML draft version timeline
 
-[Logo of HTML5]
+![Logo of HTML5](HTML5-logo.svg "Logo of HTML5"){width="200"}
 
-October 1991: _HTML Tags_,[28] an informal CERN document listing 18 HTML tags, was first mentioned in public.
-June 1992: First informal draft of the HTML DTD,[29] with seven[30][31][32] subsequent revisions (July 15, August 6, August 18, November 17, November 19, November 20, November 22)
-November 1992: HTML DTD 1.1 (the first with a version number, based on RCS revisions, which start with 1.1 rather than 1.0), an informal draft[33]
-June 1993: Hypertext Markup Language[34] was published by the IETF IIIR Working Group as an Internet Draft (a rough proposal for a standard). It was replaced by a second version[35] one month later, followed by six further drafts published by IETF itself[36] that finally led to HTML 2.0 in RFC 1866.
-November 1993: HTML+ was published by the IETF as an Internet Draft and was a competing proposal to the Hypertext Markup Language draft. It expired in May 1994.
-April 1995 (authored March 1995): HTML 3.0[37] was proposed as a standard to the IETF, but the proposal expired five months later (28 September 1995)[38] without further action. It included many of the capabilities that were in Raggett's HTML+ proposal, such as support for tables, text flow around figures and the display of complex mathematical formulas.{{cite web
-
-|url=http://www.w3.org/MarkUp/html3/CoverPage |title=HyperText Markup
-Language Specification Version 3.0 |accessdate=June 16, 2007}}
-
-    W3C began development of its own Arena browser as a test bed for
-    HTML 3 and Cascading Style Sheets,[39][40][41] but HTML 3.0 did not
-    succeed for several reasons. The draft was considered very large at
-    150 pages and the pace of browser development, as well as the number
-    of interested parties, had outstripped the resources of the
-    IETF.[42] Browser vendors, including Microsoft and Netscape at the
-    time, chose to implement different subsets of HTML 3's draft
-    features as well as to introduce their own extensions to it.[43]
-    (see Browser wars). These included extensions to control stylistic
-    aspects of documents, contrary to the “belief [of the academic
-    engineering community] that such things as text color, background
-    texture, font size and font face were definitely outside the scope
-    of a language when their only intent was to specify how a document
-    would be organized.”[44] Dave Raggett, who has been a W3C Fellow for
-    many years, has commented for example: “To a certain extent,
-    Microsoft built its business on the Web by extending
-    HTML features.”[45]
-
-January 2008: HTML5 was published as a Working Draft (link) by the W3C.[46]
-    Although its syntax closely resembles that of SGML, HTML5 has
-    abandoned any attempt to be an SGML application and has explicitly
-    defined its own “html” serialization, in addition to an alternative
-    XML-based XHTML5 serialization.[47]
+October 1991: *HTML Tags*,[^28] an informal CERN document listing 18 HTML tags, was first mentioned in public.\
+June 1992: First informal draft of the HTML DTD,[^29] with seven[^30][^31][^32] subsequent revisions (July 15, August 6, August 18, November 17, November 19, November 20, November 22)\
+November 1992: HTML DTD 1.1 (the first with a version number, based on RCS revisions, which start with 1.1 rather than 1.0), an informal draft[^33]\
+June 1993: Hypertext Markup Language[^34] was published by the [IETF](Internet_Engineering_Task_Force "wikilink") IIIR Working Group as an Internet Draft (a rough proposal for a standard). It was replaced by a second version[^35] one month later, followed by six further drafts published by IETF itself[^36] that finally led to HTML 2.0 in RFC 1866.\
+November 1993: HTML+ was published by the IETF as an Internet Draft and was a competing proposal to the Hypertext Markup Language draft. It expired in May 1994.\
+April 1995 (authored March 1995): HTML 3.0[^37] was proposed as a standard to the IETF, but the proposal expired five months later (28 September 1995)[^38] without further action. It included many of the capabilities that were in Raggett's HTML+ proposal, such as support for tables, text flow around figures and the display of complex mathematical formulas.<ref name=html30cover>{{cite web
+
+|url=<http://www.w3.org/MarkUp/html3/CoverPage> |title=HyperText Markup
+Language Specification Version 3.0 |accessdate=June 16, 2007}}</ref>
+
+:   W3C began development of its own [Arena
+    browser](Arena_(web_browser) "wikilink") as a [test
+    bed](test_bed "wikilink") for HTML 3 and Cascading Style
+    Sheets,[^39][^40][^41] but HTML 3.0 did not succeed for
+    several reasons. The draft was considered very large at 150 pages
+    and the pace of browser development, as well as the number of
+    interested parties, had outstripped the resources of the IETF.[^42]
+    Browser vendors, including Microsoft and Netscape at the time, chose
+    to implement different subsets of HTML 3's draft features as well as
+    to introduce their own extensions to it.[^43] (see [Browser
+    wars](Browser_wars "wikilink")). These included extensions to
+    control stylistic aspects of documents, contrary to the “belief \[of
+    the academic engineering community\] that such things as text color,
+    background texture, font size and font face were definitely outside
+    the scope of a language when their only intent was to specify how a
+    document would be organized.”[^44] Dave Raggett, who has been a W3C
+    Fellow for many years, has commented for example: “To a certain
+    extent, Microsoft built its business on the Web by extending
+    HTML features.”[^45]
+
+January 2008: [HTML5](HTML5 "wikilink") was published as a [Working Draft](World_Wide_Web_Consortium#Recommendations_and_Certifications "wikilink") ([link](http://www.w3.org/TR/html5/)) by the W3C.[^46]
+:   Although its syntax closely resembles that of
+    [SGML](SGML "wikilink"), [HTML5](HTML5 "wikilink") has abandoned any
+    attempt to be an SGML application and has explicitly defined its own
+    “html” serialization, in addition to an alternative XML-based XHTML5
+    serialization.[^47]
 
 2011 HTML5 – Last Call
-    On 14 February 2011, the W3C extended the charter of its HTML
+:   On 14 February 2011, the W3C extended the charter of its HTML
     Working Group with clear milestones for HTML5. In May 2011, the
     working group advanced HTML5 to “Last Call”, an invitation to
     communities inside and outside W3C to confirm the technical
     soundness of the specification. The W3C developed a comprehensive
     test suite to achieve broad interoperability for the full
     specification by 2014, which was the target date for
-    recommendation.[48] In January 2011, the WHATWG renamed its “HTML5”
+    recommendation.[^48] In January 2011, the WHATWG renamed its “HTML5”
     living standard to “HTML”. The W3C nevertheless continues its
-    project to release HTML5.[49]
+    project to release HTML5.[^49]
 
 2012 HTML5 – Candidate Recommendation
-    In July 2012, WHATWG and W3C decided on a degree of separation. W3C
-    will continue the HTML5 specification work, focusing on a single
-    definitive standard, which is considered as a “snapshot” by WHATWG.
-    The WHATWG organization will continue its work with HTML5 as a
-    “Living Standard”. The concept of a living standard is that it is
-    never complete and is always being updated and improved. New
-    features can be added but functionality will not be removed.[50]
-    In December 2012, W3C designated HTML5 as a Candidate
-    Recommendation.[51] The criterion for advancement to W3C
-    Recommendation is “two 100% complete and fully interoperable
-    implementations”.[52][53]
+:   In July 2012, WHATWG and [W3C](W3C "wikilink") decided on a degree
+    of separation. W3C will continue the HTML5 specification work,
+    focusing on a single definitive standard, which is considered as a
+    “snapshot” by WHATWG. The WHATWG organization will continue its work
+    with HTML5 as a “Living Standard”. The concept of a living standard
+    is that it is never complete and is always being updated
+    and improved. New features can be added but functionality will not
+    be removed.[^50]
+:   In December 2012, W3C designated HTML5 as a Candidate
+    Recommendation.[^51] The criterion for advancement to [W3C
+    Recommendation](W3C_recommendation#W3C_Recommendation_(REC) "wikilink")
+    is “two 100% complete and fully interoperable
+    implementations”.[^52][^53]
 
 2014 HTML5 – Proposed Recommendation and Recommendation
-    In September 2014, W3C moved HTML5 to Proposed Recommendation.[54]
-    On 28 October 2014, HTML5 was released as a stable W3C
-    Recommendation,[55] meaning the specification process is
-    complete.[56]
+:   In September 2014, W3C moved HTML5 to Proposed Recommendation.[^54]
+:   On 28 October 2014, HTML5 was released as a stable W3C
+    Recommendation,[^55] meaning the specification process is
+    complete.[^56]
 
-XHTML versions
+#### XHTML versions
 
 XHTML is a separate language that began as a reformulation of HTML 4.01
-using XML 1.0. It is no longer being developed as a separate standard.
+using [XML](XML "wikilink") 1.0. It is no longer being developed as a
+separate standard.
 
--   XHTML 1.0,[57] published January 26, 2000, as a W3C Recommendation,
+-   XHTML 1.0,[^57] published January 26, 2000, as a W3C Recommendation,
     later revised and republished August 1, 2002. It offers the same
     three variations as HTML 4.0 and 4.01, reformulated in XML, with
     minor restrictions.
--   XHTML 1.1,[58] published May 31, 2001, as a W3C Recommendation. It
+-   XHTML 1.1,[^58] published May 31, 2001, as a W3C Recommendation. It
     is based on XHTML 1.0 Strict, but includes minor changes, can be
-    customized, is reformulated using modules from Modularization of
-    XHTML, which was published April 10, 2001, as a W3C Recommendation.
+    customized, is reformulated using modules from [Modularization of
+    XHTML](http://www.w3.org/TR/xhtml-modularization/), which was
+    published April 10, 2001, as a W3C Recommendation.
 -   XHTML 2.0 was a working draft, but work on it was abandoned in 2009
-    in favor of work on HTML5 and XHTML5.[59][60][61] XHTML 2.0 was
+    in favor of work on [HTML5](HTML5 "wikilink") and
+    [XHTML5](XHTML#XHTML5 "wikilink").[^59][^60][^61] XHTML 2.0 was
     incompatible with XHTML 1.x and, therefore, would be more accurately
     characterized as an XHTML-inspired new language than an update to
     XHTML 1.x.
 -   An XHTML syntax, known as “XHTML5.1”, is being defined alongside
-    HTML5 in the HTML5 draft.[62]
-
+    [HTML5](HTML5 "wikilink") in the HTML5 draft.[^62]
 
 Markup
+------
 
 HTML markup consists of several key components, including those called
-_tags_ (and their _attributes_), character-based _data types_,
-_character references_ and _entity references_. HTML tags most commonly
-come in pairs like and , although some represent _empty elements_ and so
-are unpaired, for example . The first tag in such a pair is the _start
-tag_, and the second is the _end tag_ (they are also called _opening
-tags_ and _closing tags_).
-
-Another important component is the HTML _document type declaration_,
-which triggers standards mode rendering.
-
-The following is an example of the classic Hello world program, a common
-test employed for comparing programming languages, scripting languages
-and markup languages. This example is made using 9 lines of code:
-
-    <!DOCTYPE html>
-    <html>
-      <head>
-        <title>This is a title</title>
-      </head>
-      <body>
-        <p>Hello world!</p>
-      </body>
-    </html>
-
-_(The text between and describes the web page, and the text between and
-is the visible page content. The markup text "<title>This is a
-title</title>" defines the browser page title.)_
+*tags* (and their *attributes*), character-based *data types*,
+*character references* and *entity references*. HTML tags most commonly
+come in pairs like and , although some represent *empty elements* and so
+are unpaired, for example . The first tag in such a pair is the *start
+tag*, and the second is the *end tag* (they are also called *opening
+tags* and *closing tags*).
+
+Another important component is the HTML *[document type
+declaration](document_type_declaration "wikilink")*, which triggers
+[standards mode](standards_mode "wikilink") rendering.
+
+The following is an example of the classic [Hello world
+program](Hello_world_program "wikilink"), a common test employed for
+comparing [programming languages](programming_language "wikilink"),
+[scripting languages](scripting_language "wikilink") and [markup
+languages](markup_language "wikilink"). This example is made using 9
+[lines of code](lines_of_code "wikilink"):
+
+``` {.html5}
+<!DOCTYPE html>
+<html>
+  <head>
+    <title>This is a title</title>
+  </head>
+  <body>
+    <p>Hello world!</p>
+  </body>
+</html>
+```
+
+*(The text between and describes the web page, and the text between and
+is the visible page content. The markup text "&lt;title&gt;This is a
+title&lt;/title&gt;" defines the browser page title.)*
 
 The Document Type Declaration is for HTML5. If a declaration is not
-included, various browsers will revert to "quirks mode" for
-rendering.[63]
+included, various browsers will revert to "[quirks
+mode](quirks_mode "wikilink")" for rendering.[^63]
 
-Elements
+### Elements
 
-HTML documents imply a structure of nested HTML elements. These are
-indicated in the document by HTML _tags_, enclosed in angle brackets
-thus: [64]
+HTML documents imply a structure of nested [HTML
+elements](HTML_element "wikilink"). These are indicated in the document
+by HTML *tags*, enclosed in angle brackets thus: [^64]
 
 In the simple, general case, the extent of an element is indicated by a
 pair of tags: a “start tag” and “end tag” . The text content of the
@@ -286,15 +335,16 @@
 including a mixture of tags and text. This indicates further (nested)
 elements, as children of the parent element.
 
-The start tag may also include _attributes_ within the tag. These
+The start tag may also include *attributes* within the tag. These
 indicate other information, such as identifiers for sections within the
 document, identifiers used to bind style information to the presentation
 of the document, and for some tags such as the used to embed images, the
 reference to the image resource.
 
-Some elements, such as the line break , do not permit _any_ embedded
-content, either text or further tags. These require only a single empty
-tag (akin to a start tag) and do not use an end tag.
+Some elements, such as the [line
+break](line_breaking_character "wikilink") , do not permit *any*
+embedded content, either text or further tags. These require only a
+single empty tag (akin to a start tag) and do not use an end tag.
 
 Many tags, particularly the closing end tag for the very commonly used
 paragraph element , are optional. An HTML browser or other agent can
@@ -302,350 +352,417 @@
 structural rules defined by the HTML standard. These rules are complex
 and not widely understood by most HTML coders.
 
-The general form of an HTML ELEMENT is therefore: . Some HTML elements
-are defined as _empty elements_ and take the form . Empty elements may
-enclose no content, for instance, the tag or the inline tag. The name of
-an HTML element is the name used in the tags. Note that the end tag's
-name is preceded by a slash character, "/", and that in empty elements
-the end tag is neither required nor allowed. If attributes are not
-mentioned, default values are used in each case.
+The general form of an **HTML element** is therefore: . Some HTML
+elements are defined as *empty elements* and take the form . Empty
+elements may enclose no content, for instance, the tag or the inline
+tag. The name of an HTML element is the name used in the tags. Note that
+the end tag's name is preceded by a slash character, "/", and that in
+empty elements the end tag is neither required nor allowed. If
+attributes are not mentioned, default values are used in each case.
 
-Element examples
+#### Element examples
 
 Header of the HTML document:
 
+<head>
 ...
 
+</head>
 . The title is included in the head, for example:
 
-    <head>
-      <title>The Title</title>
-    </head>
+``` {.html4strict}
+<head>
+  <title>The Title</title>
+</head>
+```
 
 Headings: HTML headings are defined with the to tags:
 
-    <h1>Heading level 1</h1>
-    <h2>Heading level 2</h2>
-    <h3>Heading level 3</h3>
-    <h4>Heading level 4</h4>
-    <h5>Heading level 5</h5>
-    <h6>Heading level 6</h6>
+``` {.html4strict}
+<h1>Heading level 1</h1>
+<h2>Heading level 2</h2>
+<h3>Heading level 3</h3>
+<h4>Heading level 4</h4>
+<h5>Heading level 5</h5>
+<h6>Heading level 6</h6>
+```
 
 Paragraphs:
 
-    <p>Paragraph 1</p>  <p>Paragraph 2</p>
-
-Line breaks:. The difference between and is that “br” breaks a line
-without altering the semantic structure of the page, whereas “p”
-sections the page into paragraphs. Note also that “br” is an _empty
-element_ in that, although it may have attributes, it can take no
+``` {.html4strict}
+<p>Paragraph 1</p>  <p>Paragraph 2</p>
+```
+
+Line breaks:. The difference between and is that “br” [breaks a
+line](line_breaking_character "wikilink") without altering the semantic
+structure of the page, whereas “p” sections the page into
+[paragraphs](paragraph "wikilink"). Note also that “br” is an *empty
+element* in that, although it may have attributes, it can take no
 content and it may not have an end tag.
 
-    <p>This <br> is a paragraph <br> with <br> line breaks</p>
+``` {.html4strict}
+<p>This <br> is a paragraph <br> with <br> line breaks</p>
+```
 
-This is a link in HTML. To create a link the tag is used. The href=
+This is a link in HTML. To create a link the tag is used. The `href=`
 attribute holds the URL address of the link.
 
-    <a href="https://www.wikipedia.org/">A link to Wikipedia!</a>
+``` {.html5}
+<a href="https://www.wikipedia.org/">A link to Wikipedia!</a>
+```
 
 Comments:
 
-    <!-- This is a comment -->
+``` {.html4strict}
+<!-- This is a comment -->
+```
 
 Comments can help in the understanding of the markup and do not display
 in the webpage.
 
 There are several types of markup elements used in HTML:
 
-Structural markup indicates the purpose of text: For example,  establishes “Golf” as a second-level heading. Structural markup does not denote any specific rendering, but most web browsers have default styles for element formatting. Content may be further styled using Cascading Style Sheets (CSS).[65]
-Presentational markup indicates the appearance of the text, regardless of its purpose: For example,  indicates that visual output devices should render “boldface” in bold text, but gives little indication what devices that are unable to do this (such as aural devices that read the text aloud) should do. In the case of both  and , there are other elements that may have equivalent visual renderings but that are more semantic in nature, such as  and  respectively. It is easier to see how an aural user agent should interpret the latter two elements. However, they are not equivalent to their presentational counterparts: it would be undesirable for a screen-reader to emphasize the name of a book, for instance, but on a screen such a name would be italicized. Most presentational markup elements have become deprecated under the HTML 4.0 specification in favor of using CSS for styling.
-Hypertext markup makes parts of a document into links to other documents: An anchor element creates a hyperlink in the document and its href attribute sets the link's target URL. For example, the HTML markup, , will render the word "Wikipedia" as a hyperlink. To render an image as a hyperlink, an “img” element is inserted as content into the “a” element. Like “br”, “img” is an empty element with attributes but no content or closing tag. .
-
-Attributes
-
-Most of the attributes of an element are name-value pairs, separated by
-"=" and written within the start tag of an element after the element's
-name. The value may be enclosed in single or double quotes, although
-values consisting of certain characters can be left unquoted in HTML
-(but not XHTML) .[66][67] Leaving attribute values unquoted is
-considered unsafe.[68] In contrast with name-value pair attributes,
-there are some attributes that affect the element simply by their
-presence in the start tag of the element,[69] like the ismap attribute
-for the img element.[70]
+Structural markup indicates the purpose of text: For example,  establishes “Golf” as a second-level [heading](HTML_element#Basic_text "wikilink"). Structural markup does not denote any specific rendering, but most web browsers have default styles for element formatting. Content may be further styled using [Cascading Style Sheets](Cascading_Style_Sheets "wikilink") (CSS).[^65]\
+Presentational markup indicates the appearance of the text, regardless of its purpose: For example,  indicates that visual output devices should render “boldface” in bold text, but gives little indication what devices that are unable to do this (such as aural devices that read the text aloud) should do. In the case of both  and , there are other elements that may have equivalent visual renderings but that are more semantic in nature, such as  and  respectively. It is easier to see how an aural user agent should interpret the latter two elements. However, they are not equivalent to their presentational counterparts: it would be undesirable for a screen-reader to emphasize the name of a book, for instance, but on a screen such a name would be italicized. Most presentational markup elements have become [deprecated](Deprecation "wikilink") under the HTML 4.0 specification in favor of using [CSS](Cascading_Style_Sheets "wikilink") for styling.\
+Hypertext markup makes parts of a document into links to other documents: An anchor element creates a [hyperlink](hyperlink "wikilink") in the document and its `href` attribute sets the link's target [URL](Uniform_Resource_Locator "wikilink"). For example, the HTML markup, , will render the word "<span class="plainlinks">[Wikipedia](http://www.google.com/)</span>" as a hyperlink. To render an image as a hyperlink, an “img” element is inserted as content into the “a” element. Like “br”, “img” is an empty element with attributes but no content or closing tag. .
+
+#### Attributes
+
+Most of the attributes of an element are [name-value
+pairs](Attribute-value_pair "wikilink"), separated by "=" and written
+within the start tag of an element after the element's name. The value
+may be enclosed in single or double quotes, although values consisting
+of certain characters can be left unquoted in HTML (but not XHTML)
+.[^66][^67] Leaving attribute values unquoted is considered unsafe.[^68]
+In contrast with name-value pair attributes, there are some attributes
+that affect the element simply by their presence in the start tag of the
+element,[^69] like the `ismap` attribute for the `img` element.[^70]
 
 There are several common attributes that may appear in many elements :
 
--   The id attribute provides a document-wide unique identifier for
+-   The `id` attribute provides a document-wide unique identifier for
     an element. This is used to identify the element so that stylesheets
     can alter its presentational properties, and scripts may alter,
     animate or delete its contents or presentation. Appended to the URL
     of the page, it provides a globally unique identifier for the
     element, typically a sub-section of the page. For example, the ID
-    “Attributes” in http://en.wikipedia.org/wiki/HTML#Attributes
--   The class attribute provides a way of classifying similar elements.
-    This can be used for semantic or presentation purposes. For example,
-    an HTML document might semantically use the designation
-    class=“notation” to indicate that all elements with this class value
-    are subordinate to the main text of the document. In presentation ,
-    such elements might be gathered together and presented as footnotes
-    on a page instead of appearing in the place where they occur in the
-    HTML source. Class attributes are used semantically in microformats.
-    Multiple class values may be specified; for example class=“notation
-    important” puts the element into both the “notation” and the
+    “Attributes” in `http://en.wikipedia.org/wiki/HTML#Attributes`
+-   The `class` attribute provides a way of classifying
+    similar elements. This can be used for
+    [semantic](semantics "wikilink") or presentation purposes. For
+    example, an HTML document might semantically use the designation
+    `class=`“`notation`” to indicate that all elements with this class
+    value are subordinate to the main text of the document. In
+    presentation , such elements might be gathered together and
+    presented as footnotes on a page instead of appearing in the place
+    where they occur in the HTML source. Class attributes are used
+    semantically in [microformats](microformat "wikilink"). Multiple
+    class values may be specified; for example `class=`“`notation`
+    `important`” puts the element into both the “notation” and the
     “important” classes.
--   An author may use the style attribute to assign presentational
+-   An author may use the `style` attribute to assign presentational
     properties to a particular element. It is considered better practice
-    to use an element's id or class attributes to select the element
-    from within a stylesheet, though sometimes this can be too
-    cumbersome for a simple, specific, or ad hoc styling.
--   The title attribute is used to attach subtextual explanation to
-    an element. In most browsers this attribute is displayed as a
-    tooltip.
--   The lang attribute identifies the natural language of the element's
-    contents, which may be different from that of the rest of
+    to use an element's `id` or `class` attributes to select the element
+    from within a [stylesheet](Cascading_Style_Sheets "wikilink"),
+    though sometimes this can be too cumbersome for a simple, specific,
+    or ad hoc styling.
+-   The `title` attribute is used to attach subtextual explanation to
+    an element. In most [browsers](Web_browser "wikilink") this
+    attribute is displayed as a [tooltip](tooltip "wikilink").
+-   The `lang` attribute identifies the natural language of the
+    element's contents, which may be different from that of the rest of
     the document. For example, in an English-language document:
-        <p>Oh well, <span lang="fr">c'est la vie</span>, as they say in France.</p>
-
-The abbreviation element, abbr, can be used to demonstrate some of these
-attributes :
+    ``` {.html4strict}
+    <p>Oh well, <span lang="fr">c'est la vie</span>, as they say in France.</p>
+    ```
+
+The abbreviation element, `abbr`, can be used to demonstrate some of
+these attributes :
+
+``` {.html4strict}
+<abbr id="anId" class="jargon" style="color:purple;" title="Hypertext Markup Language">HTML</abbr>
+```
+
+This example displays as
+<abbr id="anId" class="jargon" style="color:purple;" title="Hypertext Markup Language">HTML</abbr>;
+in most browsers, pointing the cursor at the abbreviation should display
+the title text “Hypertext Markup Language.”
 
-    <abbr id="anId" class="jargon" style="color:purple;" title="Hypertext Markup Language">HTML</abbr>
-
-This example displays as HTML; in most browsers, pointing the cursor at
-the abbreviation should display the title text “Hypertext Markup
-Language.”
-
-Most elements take the language-related attribute dir to specify text
+Most elements take the language-related attribute `dir` to specify text
 direction, such as with “rtl” for right-to-left text in, for example,
-Arabic, Persian or Hebrew.[71]
-
-Character and entity references
-
-As of version 4.0, HTML defines a set of 252 character entity references
-and a set of 1,114,050 numeric character references, both of which allow
+[Arabic](Arabic_language "wikilink"),
+[Persian](Persian_language "wikilink") or
+[Hebrew](Hebrew_language "wikilink").[^71]
+
+### Character and entity references
+
+As of version 4.0, HTML defines a set of 252 [character entity
+references](character_entity_reference "wikilink") and a set of
+1,114,050 [numeric character
+references](numeric_character_reference "wikilink"), both of which allow
 individual characters to be written via simple markup, rather than
 literally. A literal character and its markup counterpart are considered
 equivalent and are rendered identically.
 
 The ability to “escape” characters in this way allows for the characters
-< and & (when written as &lt; and &amp;, respectively) to be interpreted
-as character data, rather than markup. For example, a literal < normally
-indicates the start of a tag, and & normally indicates the start of a
-character entity reference or numeric character reference; writing it as
-&amp; or &#x26; or &#38; allows & to be included in the content of an
-element or in the value of an attribute. The double-quote character ("),
-when not used to quote an attribute value, must also be escaped as
-&quot; or &#x22; or &#34; when it appears within the attribute value
-itself. Equivalently, the single-quote character ('), when not used to
-quote an attribute value, must also be escaped as &#x27; or &#39; (or as
-&apos; in HTML5 or XHTML documents[72][73]) when it appears within the
-attribute value itself. If document authors overlook the need to escape
-such characters, some browsers can be very forgiving and try to use
-context to guess their intent. The result is still invalid markup, which
-makes the document less accessible to other browsers and to other user
-agents that may try to parse the document for search and indexing
-purposes for example.
+`<` and `&` (when written as `&lt;` and `&amp;`, respectively) to be
+interpreted as character data, rather than markup. For example, a
+literal `<` normally indicates the start of a tag, and `&` normally
+indicates the start of a character entity reference or numeric character
+reference; writing it as `&amp;` or `&#x26;` or `&#38;` allows `&` to be
+included in the content of an element or in the value of an attribute.
+The double-quote character (`"`), when not used to quote an attribute
+value, must also be escaped as `&quot;` or `&#x22;` or `&#34;` when it
+appears within the attribute value itself. Equivalently, the
+single-quote character (`'`), when not used to quote an attribute value,
+must also be escaped as `&#x27;` or `&#39;` (or as `&apos;` in HTML5 or
+XHTML documents[^72][^73]) when it appears within the attribute value
+itself. If document authors overlook the need to escape such characters,
+some browsers can be very forgiving and try to use context to guess
+their intent. The result is still invalid markup, which makes the
+document less accessible to other browsers and to other [user
+agents](user_agent "wikilink") that may try to parse the document for
+[search and indexing](Web_crawler "wikilink") purposes for example.
 
 Escaping also allows for characters that are not easily typed, or that
-are not available in the document's character encoding, to be
-represented within element and attribute content. For example, the
-acute-accented e (é), a character typically found only on Western
-European and South American keyboards, can be written in any HTML
-document as the entity reference &eacute; or as the numeric references
-&#xE9; or &#233;, using characters that are available on all keyboards
-and are supported in all character encodings. Unicode character
-encodings such as UTF-8 are compatible with all modern browsers and
-allow direct access to almost all the characters of the world's writing
-systems.[74]
-
-Data types
-
-HTML defines several data types for element content, such as script data
-and stylesheet data, and a plethora of types for attribute values,
-including IDs, names, URIs, numbers, units of length, languages, media
-descriptors, colors, character encodings, dates and times, and so on.
-All of these data types are specializations of character data.
-
-Document type declaration
-
-HTML documents are required to start with a Document Type Declaration
-(informally, a “doctype”). In browsers, the doctype helps to define the
-rendering mode—particularly whether to use quirks mode.
+are not available in the document's [character
+encoding](character_encoding "wikilink"), to be represented within
+element and attribute content. For example, the acute-accented `e`
+(`é`), a character typically found only on Western European and South
+American keyboards, can be written in any HTML document as the entity
+reference `&eacute;` or as the numeric references `&#xE9;` or `&#233;`,
+using characters that are available on all keyboards and are supported
+in all character encodings. [Unicode](Unicode "wikilink") character
+encodings such as [UTF-8](UTF-8 "wikilink") are compatible with all
+modern browsers and allow direct access to almost all the characters of
+the world's writing systems.[^74]
+
+### Data types
+
+HTML defines several [data types](data_type "wikilink") for element
+content, such as script data and stylesheet data, and a plethora of
+types for attribute values, including IDs, names, URIs, numbers, units
+of length, languages, media descriptors, colors, character encodings,
+dates and times, and so on. All of these data types are specializations
+of character data.
+
+### Document type declaration
+
+HTML documents are required to start with a [Document Type
+Declaration](Document_Type_Declaration "wikilink") (informally, a
+“doctype”). In browsers, the doctype helps to define the rendering
+mode—particularly whether to use [quirks mode](quirks_mode "wikilink").
 
 The original purpose of the doctype was to enable parsing and validation
-of HTML documents by SGML tools based on the Document Type Definition
-(DTD). The DTD to which the DOCTYPE refers contains a machine-readable
-grammar specifying the permitted and prohibited content for a document
-conforming to such a DTD. Browsers, on the other hand, do not implement
-HTML as an application of SGML and by consequence do not read the DTD.
-
-HTML5 does not define a DTD; therefore, in HTML5 the doctype declaration
-is simpler and shorter:[75]
-
-    <!DOCTYPE html>
+of HTML documents by SGML tools based on the [Document Type
+Definition](Document_Type_Definition "wikilink") (DTD). The DTD to which
+the DOCTYPE refers contains a machine-readable grammar specifying the
+permitted and prohibited content for a document conforming to such a
+DTD. Browsers, on the other hand, do not implement HTML as an
+application of SGML and by consequence do not read the DTD.
+
+[HTML5](HTML5 "wikilink") does not define a DTD; therefore, in HTML5 the
+doctype declaration is simpler and shorter:[^75]
+
+``` {.html5}
+<!DOCTYPE html>
+```
 
 An example of an HTML 4 doctype
 
-    <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+``` {.html4strict}
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+```
 
 This declaration references the DTD for the “strict” version of HTML
 4.01. SGML-based validators read the DTD in order to properly parse the
 document and to perform validation. In modern browsers, a valid doctype
-activates standards mode as opposed to quirks mode.
-
-In addition, HTML 4.01 provides Transitional and Frameset DTDs, as
-explained below. Transitional type is the most inclusive, incorporating
-current tags as well as older or “deprecated” tags, with the Strict DTD
-excluding deprecated tags. Frameset has all tags necessary to make
-frames on a page along with the tags included in transitional type.
+activates standards mode as opposed to [quirks
+mode](quirks_mode "wikilink").
 
+In addition, HTML 4.01 provides Transitional and Frameset DTDs, [as
+explained below](#Transitional_versus_strict "wikilink"). Transitional
+type is the most inclusive, incorporating current tags as well as older
+or “deprecated” tags, with the Strict DTD excluding deprecated tags.
+Frameset has all tags necessary to make frames on a page along with the
+tags included in transitional type.
 
 Semantic HTML
+-------------
 
 Semantic HTML is a way of writing HTML that emphasizes the meaning of
 the encoded information over its presentation (look). HTML has included
-semantic markup from its inception,[76] but has also included
-presentational markup, such as <font>, <i> and <center> tags. There are
-also the semantically neutral span and div tags. Since the late 1990s
-when Cascading Style Sheets were beginning to work in most browsers, web
-authors have been encouraged to avoid the use of presentational HTML
-markup with a view to the separation of presentation and content.[77]
-
-In a 2001 discussion of the Semantic Web, Tim Berners-Lee and others
-gave examples of ways in which intelligent software “agents” may one day
-automatically crawl the web and find, filter and correlate previously
-unrelated, published facts for the benefit of human users.[78] Such
-agents are not commonplace even now, but some of the ideas of Web 2.0,
-mashups and price comparison websites may be coming close. The main
-difference between these web application hybrids and Berners-Lee's
-semantic agents lies in the fact that the current aggregation and
-hybridization of information is usually designed in by web developers,
-who already know the web locations and the API semantics of the specific
+semantic markup from its inception,[^76] but has also included
+presentational markup, such as `<font>`, `<i>` and `<center>` tags.
+There are also the semantically neutral [span and
+div](span_and_div "wikilink") tags. Since the late 1990s when [Cascading
+Style Sheets](Cascading_Style_Sheets "wikilink") were beginning to work
+in most browsers, web authors have been encouraged to avoid the use of
+presentational HTML markup with a view to the [separation of
+presentation and
+content](separation_of_presentation_and_content "wikilink").[^77]
+
+In a 2001 discussion of the [Semantic Web](Semantic_Web "wikilink"),
+[Tim Berners-Lee](Tim_Berners-Lee "wikilink") and others gave examples
+of ways in which intelligent software “agents” may one day automatically
+crawl the web and find, filter and correlate previously unrelated,
+published facts for the benefit of human users.[^78] Such agents are not
+commonplace even now, but some of the ideas of [Web
+2.0](Web_2.0 "wikilink"),
+[mashups](Mashup_(web_application_hybrid) "wikilink") and [price
+comparison websites](Price_comparison_service "wikilink") may be coming
+close. The main difference between these web application hybrids and
+Berners-Lee's semantic agents lies in the fact that the current
+[aggregation](Feed_aggregator "wikilink") and hybridization of
+information is usually designed in by [web
+developers](web_developer "wikilink"), who already know the web
+locations and the [API
+semantics](Application_programming_interface "wikilink") of the specific
 data they wish to mash, compare and combine.
 
 An important type of web agent that does crawl and read web pages
-automatically, without prior knowledge of what it might find, is the web
-crawler or search-engine spider. These software agents are dependent on
-the semantic clarity of web pages they find as they use various
-techniques and algorithms to read and index millions of web pages a day
-and provide web users with search facilities without which the World
-Wide Web's usefulness would be greatly reduced.
+automatically, without prior knowledge of what it might find, is the
+[web crawler](web_crawler "wikilink") or search-engine spider. These
+software agents are dependent on the semantic clarity of web pages they
+find as they use various techniques and
+[algorithms](algorithm "wikilink") to read and index millions of web
+pages a day and provide web users with [search
+facilities](Web_search_engine "wikilink") without which the World Wide
+Web's usefulness would be greatly reduced.
 
 In order for search-engine spiders to be able to rate the significance
 of pieces of text they find in HTML documents, and also for those
 creating mashups and other hybrids as well as for more automated agents
 as they are developed, the semantic structures that exist in HTML need
 to be widely and uniformly applied to bring out the meaning of published
-text.[79]
-
-Presentational markup tags are deprecated in current HTML and XHTML
-recommendations and are illegal in HTML5.
-
-Good semantic HTML also improves the accessibility of web documents (see
-also Web Content Accessibility Guidelines). For example, when a screen
-reader or audio browser can correctly ascertain the structure of a
-document, it will not waste the visually impaired user's time by reading
-out repeated or irrelevant information when it has been marked up
-correctly.
+text.[^79]
 
+Presentational markup tags are [deprecated](Deprecation "wikilink") in
+current HTML and [XHTML](XHTML "wikilink") recommendations and are
+illegal in HTML5.
+
+Good semantic HTML also improves the
+[accessibility](accessibility "wikilink") of web documents (see also
+[Web Content Accessibility
+Guidelines](Web_Content_Accessibility_Guidelines "wikilink")). For
+example, when a screen reader or audio browser can correctly ascertain
+the structure of a document, it will not waste the visually impaired
+user's time by reading out repeated or irrelevant information when it
+has been marked up correctly.
 
 Delivery
+--------
 
 HTML documents can be delivered by the same means as any other computer
-file. However, they are most often delivered either by HTTP from a web
-server or by email.
-
-HTTP
-
-The World Wide Web is composed primarily of HTML documents transmitted
-from web servers to web browsers using the Hypertext Transfer Protocol
+file. However, they are most often delivered either by
+[HTTP](Hypertext_Transfer_Protocol "wikilink") from a [web
+server](web_server "wikilink") or by [email](email "wikilink").
+
+### HTTP
+
+The [World Wide Web](World_Wide_Web "wikilink") is composed primarily of
+HTML documents transmitted from web servers to web browsers using the
+[Hypertext Transfer Protocol](Hypertext_Transfer_Protocol "wikilink")
 (HTTP). However, HTTP is used to serve images, sound, and other content,
 in addition to HTML. To allow the web browser to know how to handle each
 document it receives, other information is transmitted along with the
-document. This meta data usually includes the MIME type (e.g. text/html
-or application/xhtml+xml) and the character encoding (see Character
-encoding in HTML).
+document. This [meta data](meta_data "wikilink") usually includes the
+[MIME type](MIME_type "wikilink") (e.g. `text/html` or
+`application/xhtml+xml`) and the character encoding (see [Character
+encoding in HTML](Character_encoding_in_HTML "wikilink")).
 
 In modern browsers, the MIME type that is sent with the HTML document
 may affect how the document is initially interpreted. A document sent
-with the XHTML MIME type is expected to be well-formed XML; syntax
-errors may cause the browser to fail to render it. The same document
-sent with the HTML MIME type might be displayed successfully, since some
-browsers are more lenient with HTML.
+with the XHTML MIME type is expected to be
+[well-formed](XML#Well-formed_documents "wikilink") XML; syntax errors
+may cause the browser to fail to render it. The same document sent with
+the HTML MIME type might be displayed successfully, since some browsers
+are more lenient with HTML.
 
 The W3C recommendations state that XHTML 1.0 documents that follow
 guidelines set forth in the recommendation's Appendix C may be labeled
-with either MIME Type.[80] XHTML 1.1 also states that XHTML 1.1
-documents should[81] be labeled with either MIME type.[82]
+with either MIME Type.[^80] XHTML 1.1 also states that XHTML 1.1
+documents should[^81] be labeled with either MIME type.[^82]
 
-HTML e-mail
+### HTML e-mail
 
 Most graphical email clients allow the use of a subset of HTML (often
-ill-defined) to provide formatting and semantic markup not available
-with plain text. This may include typographic information like coloured
-headings, emphasized and quoted text, inline images and diagrams. Many
-such clients include both a GUI editor for composing HTML e-mail
-messages and a rendering engine for displaying them. Use of HTML in
-e-mail is criticized by some because of compatibility issues, because it
-can help disguise phishing attacks, because of accessibility issues for
-blind or visually impaired people, because it can confuse spam filters
-and because the message size is larger than plain text.
-
-Naming conventions
-
-The most common filename extension for files containing HTML is .html. A
-common abbreviation of this is .htm, which originated because some early
-operating systems and file systems, such as DOS and the limitations
-imposed by FAT data structure, limited file extensions to three
-letters.[83]
-
-HTML Application
-
-An HTML Application (HTA; file extension ".hta") is a Microsoft Windows
-application that uses HTML and Dynamic HTML in a browser to provide the
+ill-defined) to provide formatting and
+[semantic](semantic_web "wikilink") markup not available with [plain
+text](plain_text "wikilink"). This may include typographic information
+like coloured headings, emphasized and quoted text, inline images and
+diagrams. Many such clients include both a
+[GUI](Graphical_user_interface "wikilink") editor for composing HTML
+e-mail messages and a rendering engine for displaying them. Use of HTML
+in e-mail is criticized by some because of compatibility issues, because
+it can help disguise [phishing](phishing "wikilink") attacks, because of
+accessibility issues for blind or visually impaired people, because it
+can confuse [spam](E-Mail_spam "wikilink") filters and because the
+message size is larger than plain text.
+
+### Naming conventions
+
+The most common [filename extension](filename_extension "wikilink") for
+[files](computer_file "wikilink") containing HTML is `.html`. A common
+abbreviation of this is `.htm`, which originated because some early
+operating systems and file systems, such as [DOS](DOS "wikilink") and
+the limitations imposed by [FAT](File_Allocation_Table "wikilink") data
+structure, limited file extensions to [three
+letters](8.3_filename "wikilink").[^83]
+
+### HTML Application
+
+An HTML Application (HTA; file extension ".hta") is a [Microsoft
+Windows](Microsoft_Windows "wikilink") application that uses HTML and
+Dynamic HTML in a [browser](Web_browser "wikilink") to provide the
 application's graphical interface. A regular HTML file is confined to
-the security model of the web browser's security, communicating only to
-web servers and manipulating only webpage objects and site cookies. An
-HTA runs as a fully trusted application and therefore has more
-privileges, like creation/editing/removal of files and Windows Registry
-entries. Because they operate outside the browser's security model, HTAs
-cannot be executed via HTTP, but must be downloaded (just like an EXE
-file) and executed from local file system.
-
+the [security model](security_model "wikilink") of the [web browser's
+security](Browser_security "wikilink"), communicating only to web
+servers and manipulating only webpage objects and [site
+cookies](HTTP_cookie "wikilink"). An HTA runs as a fully trusted
+application and therefore has more privileges, like
+creation/editing/removal of files and [Windows
+Registry](Windows_Registry "wikilink") entries. Because they operate
+outside the browser's security model, HTAs cannot be executed via HTTP,
+but must be downloaded (just like an [EXE file](EXE "wikilink")) and
+executed from local file system.
 
 HTML4 variations
+----------------
 
 Since its inception, HTML and its associated protocols gained acceptance
 relatively quickly. However, no clear standards existed in the early
 years of the language. Though its creators originally conceived of HTML
-as a semantic language devoid of presentation details,[84] practical
+as a semantic language devoid of presentation details,[^84] practical
 uses pushed many presentational elements and attributes into the
 language, driven largely by the various browser vendors. The latest
 standards surrounding HTML reflect efforts to overcome the sometimes
-chaotic development of the language[85] and to create a rational
+chaotic development of the language[^85] and to create a rational
 foundation for building both meaningful and well-presented documents. To
-return HTML to its role as a semantic language, the W3C has developed
-style languages such as CSS and XSL to shoulder the burden of
-presentation. In conjunction, the HTML specification has slowly reined
-in the presentational elements.
+return HTML to its role as a semantic language, the
+[W3C](World_Wide_Web_Consortium "wikilink") has developed style
+languages such as [CSS](Cascading_Style_Sheets "wikilink") and
+[XSL](Extensible_Stylesheet_Language "wikilink") to shoulder the burden
+of presentation. In conjunction, the HTML specification has slowly
+reined in the presentational elements.
 
 There are two axes differentiating various variations of HTML as
 currently specified: SGML-based HTML versus XML-based HTML (referred to
 as XHTML) on one axis, and strict versus transitional (loose) versus
 frameset on the other axis.
 
-SGML-based versus XML-based HTML
+### SGML-based versus XML-based HTML
 
 One difference in the latest HTML specifications lies in the distinction
 between the SGML-based specification and the XML-based specification.
-The XML-based specification is usually called XHTML to distinguish it
-clearly from the more traditional definition. However, the root element
-name continues to be “html” even in the XHTML-specified HTML. The W3C
-intended XHTML 1.0 to be identical to HTML 4.01 except where limitations
-of XML over the more complex SGML require workarounds. Because XHTML and
-HTML are closely related, they are sometimes documented in parallel. In
-such circumstances, some authors conflate the two names as (X)HTML or
-X(HTML).
+The XML-based specification is usually called [XHTML](XHTML "wikilink")
+to distinguish it clearly from the more traditional definition. However,
+the root element name continues to be “html” even in the XHTML-specified
+HTML. The W3C intended XHTML 1.0 to be identical to HTML 4.01 except
+where limitations of XML over the more complex SGML require workarounds.
+Because XHTML and HTML are closely related, they are sometimes
+documented in parallel. In such circumstances, some authors [conflate
+the two names]((X)HTML "wikilink") as (X)HTML or X(HTML).
 
 Like HTML 4.01, XHTML 1.0 has three sub-specifications: strict,
 transitional and frameset.
@@ -658,30 +775,31 @@
 have an end tag. By contrast, XHTML requires all elements to have an
 opening tag and a closing tag. XHTML, however, also introduces a new
 shortcut: an XHTML tag may be opened and closed within the same tag, by
-including a slash before the end of the tag like this: <br/>. The
+including a slash before the end of the tag like this: `<br/>`. The
 introduction of this shorthand, which is not used in the SGML
 declaration for HTML 4.01, may confuse earlier software unfamiliar with
 this new convention. A fix for this is to include a space before closing
-the tag, as such: <br />.[86]
+the tag, as such: `<br` `/>`.[^86]
 
 To understand the subtle differences between HTML and XHTML, consider
 the transformation of a valid and well-formed XHTML 1.0 document that
 adheres to Appendix C (see below) into a valid HTML 4.01 document. To
 make this translation requires the following steps:
 
-1.  THE LANGUAGE FOR AN ELEMENT SHOULD BE SPECIFIED WITH A lang
-    ATTRIBUTE RATHER THAN THE XHTML xml:lang ATTRIBUTE. XHTML uses XML's
-    built in language-defining functionality attribute.
-2.  REMOVE THE XML NAMESPACE (xmlns=URI). HTML has no facilities
+1.  **The language for an element should be specified with a `lang`
+    attribute rather than the XHTML `xml:lang` attribute.** XHTML uses
+    XML's built in language-defining functionality attribute.
+2.  **Remove the XML namespace (`xmlns=URI`).** HTML has no facilities
     for namespaces.
-3.  CHANGE THE DOCUMENT TYPE DECLARATION from XHTML 1.0 to HTML 4.01.
-    (see DTD section for further explanation).
-4.  If present, REMOVE THE XML DECLARATION. (Typically this is: ).
-5.  ENSURE THAT THE DOCUMENT'S MIME TYPE IS SET TO text/html. For both
-    HTML and XHTML, this comes from the HTTP Content-Type header sent by
-    the server.
-6.  CHANGE THE XML EMPTY-ELEMENT SYNTAX TO AN HTML STYLE EMPTY ELEMENT
-    (<br/> to <br>).
+3.  **Change the document type declaration** from XHTML 1.0 to
+    HTML 4.01. (see [DTD section](#Document_type_declaration "wikilink")
+    for further explanation).
+4.  If present, **remove the XML declaration.** (Typically this is: ).
+5.  **Ensure that the document's MIME type is set to `text/html`.** For
+    both HTML and XHTML, this comes from the HTTP `Content-Type` header
+    sent by the server.
+6.  **Change the XML empty-element syntax to an HTML style empty
+    element** (`<br/>` to `<br>`).
 
 Those are the main changes necessary to translate a document from XHTML
 1.0 to HTML 4.01. To translate from HTML to XHTML would also require the
@@ -694,29 +812,30 @@
 which describes the document structure.
 
 The W3C recommends several conventions to ensure an easy migration
-between HTML and XHTML (see HTML Compatibility Guidelines). The
-following steps can be applied to XHTML 1.0 documents only:
+between HTML and XHTML (see [HTML Compatibility
+Guidelines](http://www.w3.org/TR/xhtml1/#guidelines)). The following
+steps can be applied to XHTML 1.0 documents only:
 
--   Include both xml:lang and lang attributes on any elements
+-   Include both `xml:lang` and `lang` attributes on any elements
     assigning language.
 -   Use the empty-element syntax only for elements specified as empty
     in HTML.
--   Include an extra space in empty-element tags: for example <br />
-    instead of <br/>.
+-   Include an extra space in empty-element tags: for example `<br` `/>`
+    instead of `<br/>`.
 -   Include explicit close tags for elements that permit content but are
-    left empty (for example, <div></div>, not <div />).
+    left empty (for example, `<div>``</div>`, not `<div` `/>`).
 -   Omit the XML declaration.
 
 By carefully following the W3C's compatibility guidelines, a user agent
 should be able to interpret the document equally as HTML or XHTML. For
 documents that are XHTML 1.0 and have been made compatible in this way,
-the W3C permits them to be served either as HTML (with a text/html MIME
-type), or as XHTML (with an application/xhtml+xml or application/xml
-MIME type). When delivered as XHTML, browsers should use an XML parser,
-which adheres strictly to the XML specifications for parsing the
-document's contents.
+the W3C permits them to be served either as HTML (with a `text/html`
+[MIME type](MIME_type "wikilink")), or as XHTML (with an
+`application/xhtml+xml` or `application/xml` MIME type). When delivered
+as XHTML, browsers should use an XML parser, which adheres strictly to
+the XML specifications for parsing the document's contents.
 
-Transitional versus strict
+### Transitional versus strict
 
 HTML 4 defined three different versions of the language: Strict,
 Transitional (once called Loose) and Frameset. The Strict version is
@@ -724,82 +843,86 @@
 Transitional and Frameset versions were developed to make it easier to
 transition documents that conformed to older HTML specification or
 didn't conform to any specification to a version of HTML 4. The
-Transitional and Frameset versions allow for presentational markup,
-which is omitted in the Strict version. Instead, cascading style sheets
-are encouraged to improve the presentation of HTML documents. Because
-XHTML 1 only defines an XML syntax for the language defined by HTML 4,
-the same differences apply to XHTML 1 as well.
+Transitional and Frameset versions allow for [presentational
+markup](presentational_markup "wikilink"), which is omitted in the
+Strict version. Instead, [cascading style
+sheets](cascading_style_sheets "wikilink") are encouraged to improve the
+presentation of HTML documents. Because XHTML 1 only defines an XML
+syntax for the language defined by HTML 4, the same differences apply to
+XHTML 1 as well.
 
 The Transitional version allows the following parts of the vocabulary,
 which are not included in the Strict version:
 
--   A LOOSER CONTENT MODEL
-    -   Inline elements and plain text are allowed directly in: body,
-        blockquote, form, noscript and noframes
--   PRESENTATION RELATED ELEMENTS
-    -   underline (u)(Deprecated. can confuse a visitor with
+-   **A looser content model**
+    -   Inline elements and plain text are allowed directly in: `body`,
+        `blockquote`, `form`, `noscript` and `noframes`
+-   **Presentation related elements**
+    -   underline (`u`)(Deprecated. can confuse a visitor with
         a hyperlink.)
-    -   strike-through (s)
-    -   center (Deprecated. use CSS instead.)
-    -   font (Deprecated. use CSS instead.)
-    -   basefont (Deprecated. use CSS instead.)
--   PRESENTATION RELATED ATTRIBUTES
-    -   background (Deprecated. use CSS instead.) and
-        bgcolor (Deprecated. use CSS instead.) attributes for body
+    -   strike-through (`s`)
+    -   `center` (Deprecated. use CSS instead.)
+    -   `font` (Deprecated. use CSS instead.)
+    -   `basefont` (Deprecated. use CSS instead.)
+-   **Presentation related attributes**
+    -   `background` (Deprecated. use CSS instead.) and
+        `bgcolor` (Deprecated. use CSS instead.) attributes for `body`
         (required element according to the W3C.) element.
-    -   align (Deprecated. use CSS instead.) attribute on div, form,
-        paragraph (p) and heading (h1...h6) elements
-    -   align (Deprecated. use CSS instead.), noshade (Deprecated. use
-        CSS instead.), size (Deprecated. use CSS instead.) and
-        width (Deprecated. use CSS instead.) attributes on hr element
-    -   align (Deprecated. use CSS instead.), border, vspace and hspace
-        attributes on img and object (caution: the object element is
-        only supported in Internet Explorer (from the major browsers))
-        elements
-    -   align (Deprecated. use CSS instead.) attribute on legend and
-        caption elements
-    -   align (Deprecated. use CSS instead.) and bgcolor (Deprecated.
-        use CSS instead.) on table element
-    -   nowrap (Obsolete), bgcolor (Deprecated. use CSS instead.),
-        width, height on td and th elements
-    -   bgcolor (Deprecated. use CSS instead.) attribute on tr element
-    -   clear (Obsolete) attribute on br element
-    -   compact attribute on dl, dir and menu elements
-    -   type (Deprecated. use CSS instead.), compact (Deprecated. use
-        CSS instead.) and start (Deprecated. use CSS instead.)
-        attributes on ol and ul elements
-    -   type and value attributes on li element
-    -   width attribute on pre element
--   ADDITIONAL ELEMENTS IN TRANSITIONAL SPECIFICATION
-    -   menu (Deprecated. use CSS instead.) list (no substitute, though
+    -   `align` (Deprecated. use CSS instead.) attribute on `div`,
+        `form`, paragraph (`p`) and heading (`h1`...`h6`) elements
+    -   `align` (Deprecated. use CSS instead.), `noshade` (Deprecated.
+        use CSS instead.), `size` (Deprecated. use CSS instead.) and
+        `width` (Deprecated. use CSS instead.) attributes on `hr`
+        element
+    -   `align` (Deprecated. use CSS instead.), `border`, `vspace` and
+        `hspace` attributes on `img` and `object` (caution: the `object`
+        element is only supported in Internet Explorer (from the
+        major browsers)) elements
+    -   `align` (Deprecated. use CSS instead.) attribute on `legend` and
+        `caption` elements
+    -   `align` (Deprecated. use CSS instead.) and
+        `bgcolor` (Deprecated. use CSS instead.) on `table` element
+    -   `nowrap` (Obsolete), `bgcolor` (Deprecated. use CSS instead.),
+        `width`, `height` on `td` and `th` elements
+    -   `bgcolor` (Deprecated. use CSS instead.) attribute on `tr`
+        element
+    -   `clear` (Obsolete) attribute on `br` element
+    -   `compact` attribute on `dl`, `dir` and `menu` elements
+    -   `type` (Deprecated. use CSS instead.), `compact` (Deprecated.
+        use CSS instead.) and `start` (Deprecated. use CSS instead.)
+        attributes on `ol` and `ul` elements
+    -   `type` and `value` attributes on `li` element
+    -   `width` attribute on `pre` element
+-   **Additional elements in Transitional specification**
+    -   `menu` (Deprecated. use CSS instead.) list (no substitute,
+        though unordered list is recommended)
+    -   `dir` (Deprecated. use CSS instead.) list (no substitute, though
         unordered list is recommended)
-    -   dir (Deprecated. use CSS instead.) list (no substitute, though
-        unordered list is recommended)
-    -   isindex (Deprecated.) (element requires server-side support and
-        is typically added to documents server-side, form and input
-        elements can be used as a substitute)
-    -   applet (Deprecated. use the object element instead.)
--   THE language (OBSOLETE) ATTRIBUTE ON SCRIPT ELEMENT (redundant with
-    the type attribute).
--   FRAME RELATED ENTITIES
-    -   iframe
-    -   noframes
-    -   target (Deprecated in the map, link and form elements.)
-        attribute on a, client-side image-map (map), link, form and base
-        elements
+    -   `isindex` (Deprecated.) (element requires server-side support
+        and is typically added to documents server-side, `form` and
+        `input` elements can be used as a substitute)
+    -   `applet` (Deprecated. use the `object` element instead.)
+-   **The `language` (Obsolete) attribute on script element** (redundant
+    with the `type` attribute).
+-   **Frame related entities**
+    -   `iframe`
+    -   `noframes`
+    -   `target` (Deprecated in the `map`, `link` and `form` elements.)
+        attribute on `a`, client-side image-map (`map`), `link`, `form`
+        and `base` elements
 
 The Frameset version includes everything in the Transitional version, as
-well as the frameset element (used instead of body) and the frame
+well as the `frameset` element (used instead of `body`) and the `frame`
 element.
 
-Frameset versus transitional
+### Frameset versus transitional
 
 In addition to the above transitional differences, the frameset
 specifications (whether XHTML 1.0 or HTML 4.01) specify a different
-content model, with frameset replacing body, that contains either frame
-elements, or optionally noframes with a body.
+content model, with `frameset` replacing `body`, that contains either
+`frame` elements, or optionally `noframes` with a `body`.
 
-Summary of specification versions
+### Summary of specification versions
 
 As this list demonstrates, the loose versions of the specification are
 maintained for legacy support. However, contrary to popular
@@ -814,9 +937,10 @@
 find similar extended XHTML 1.1 support (much of it is contained in the
 legacy or frame modules). The modularization also allows for separate
 features to develop on their own timetable. So for example, XHTML 1.1
-will allow quicker migration to emerging XML standards such as MathML (a
-presentational and semantic math language based on XML) and XForms—a new
-highly advanced web-form technology to replace the existing HTML forms.
+will allow quicker migration to emerging XML standards such as
+[MathML](MathML "wikilink") (a presentational and semantic math language
+based on XML) and [XForms](XForms "wikilink")—a new highly advanced
+web-form technology to replace the existing HTML forms.
 
 In summary, the HTML 4 specification primarily reined in all the various
 HTML implementations into a single clearly written specification based
@@ -826,292 +950,333 @@
 intended to be the first step in adding new features to the
 specification in a standards-body-based approach.
 
-
 HTML5 variations
+----------------
 
-WHATWG HTML versus HTML5
-
-The WHATWG considers their work as _living standard_ HTML for what
-constitutes the state of the art in major browser implementations by
-Apple (Safari), Google (Chrome), Mozilla (Firefox), Opera (Opera), and
-others. HTML5 is specified by the HTML Working Group of the W3C
-following the W3C process. both specifications are similar and mostly
-derived from each other, i.e., the work on HTML5 started with an older
-WHATWG draft, and later the WHATWG _living standard_ was based on HTML5
-drafts in 2011.[87][88]
+### WHATWG HTML versus HTML5
 
+The
+[<abbr title="Web Hypertext Application Technology Working Group">WHATWG</abbr>](WHATWG "wikilink")
+considers their work as *living standard* HTML for what constitutes the
+state of the art in major browser implementations by
+[Apple](Apple_Inc. "wikilink")
+([Safari](Safari_(web_browser) "wikilink")), [Google](Google "wikilink")
+([Chrome](Google_Chrome "wikilink")),
+[Mozilla](Mozilla_Foundation "wikilink")
+([Firefox](Firefox "wikilink")), [Opera](Opera_Software "wikilink")
+([Opera](Opera_(web_browser) "wikilink")), and others. HTML5 is
+specified by the HTML Working Group of the
+[W3C](World_Wide_Web_Consortium "wikilink") following the W3C process.
+both specifications are similar and mostly derived from each other,
+i.e., the work on HTML5 started with an older WHATWG draft, and later
+the WHATWG *living standard* was based on HTML5 drafts in
+2011.[^87][^88]
 
 Hypertext features not in HTML
+------------------------------
 
 HTML lacks some of the features found in earlier hypertext systems, such
-as source tracking, fat links and others.[89] Even some hypertext
+as [source tracking](source_tracking "wikilink"), [fat
+links](fat_link "wikilink") and others.[^89] Even some hypertext
 features that were in early versions of HTML have been ignored by most
 popular web browsers until recently, such as the link element and
 in-browser Web page editing.
 
 Sometimes Web services or browser manufacturers remedy these
-shortcomings. For instance, wikis and content management systems allow
-surfers to edit the Web pages they visit.
-
+shortcomings. For instance, [wikis](wiki "wikilink") and [content
+management systems](content_management_system "wikilink") allow surfers
+to edit the Web pages they visit.
 
 WYSIWYG editors
+---------------
 
-There are some WYSIWYG editors (What You See Is What You Get), in which
-the user lays out everything as it is to appear in the HTML document
-using a graphical user interface (GUI), often similar to word
-processors. The editor renders the document rather than show the code,
-so authors do not require extensive knowledge of HTML.
-
-The WYSIWYG editing model has been criticized,[90][91] primarily because
-of the low quality of the generated code; there are voices advocating a
-change to the WYSIWYM model (What You See Is What You Mean).
+There are some [WYSIWYG](WYSIWYG "wikilink") editors (What You See Is
+What You Get), in which the user lays out everything as it is to appear
+in the HTML document using a [graphical user
+interface](graphical_user_interface "wikilink") (GUI), often similar to
+[word processors](word_processor "wikilink"). The editor renders the
+document rather than show the code, so authors do not require extensive
+knowledge of HTML.
+
+The WYSIWYG editing model has been criticized,[^90][^91] primarily
+because of the low quality of the generated code; there are voices
+advocating a change to the [WYSIWYM](WYSIWYM "wikilink") model (What You
+See Is What You Mean).
 
 WYSIWYG editors remain a controversial topic because of their perceived
 flaws such as:
 
 -   Relying mainly on layout as opposed to meaning, often using markup
     that does not convey the intended meaning but simply copies the
-    layout.[92]
+    layout.[^92]
 -   Often producing extremely verbose and redundant code that fails to
-    make use of the cascading nature of HTML and CSS.
--   Often producing ungrammatical markup, called tag soup or
-    semantically incorrect markup (such as <em> for italics).
+    make use of the cascading nature of HTML and [CSS](CSS "wikilink").
+-   Often producing ungrammatical markup, called [tag
+    soup](tag_soup "wikilink") or semantically incorrect markup (such as
+    `<em>` for italics).
 -   As a great deal of the information in HTML documents is not in the
     layout, the model has been criticized for its “what you see is all
-    you get”-nature.[93]
-
+    you get”-nature.[^93]
 
 See also
+--------
 
--   Breadcrumb (navigation)
--   Comparison of HTML parsers
--   CSS
--   Dynamic web page
--   HTML decimal character rendering
--   HTML5
--   HTTP
--   JavaScript
--   List of document markup languages
--   List of XML and HTML character entity references
--   Microdata (HTML)
--   Microformat
--   Polyglot HTML
--   Semantic HTML
--   SGML
--   W3C (X)HTML Validator
--   XML
-
+-   [Breadcrumb (navigation)](Breadcrumb_(navigation) "wikilink")
+-   [Comparison of HTML parsers](Comparison_of_HTML_parsers "wikilink")
+-   [CSS](CSS "wikilink")
+-   [Dynamic web page](Dynamic_web_page "wikilink")
+-   [HTML decimal character
+    rendering](HTML_decimal_character_rendering "wikilink")
+-   [HTML5](HTML5 "wikilink")
+-   [HTTP](HTTP "wikilink")
+-   [JavaScript](JavaScript "wikilink")
+-   [List of document markup
+    languages](List_of_document_markup_languages "wikilink")
+-   [List of XML and HTML character entity
+    references](List_of_XML_and_HTML_character_entity_references "wikilink")
+-   [Microdata (HTML)](Microdata_(HTML) "wikilink")
+-   [Microformat](Microformat "wikilink")
+-   [Polyglot HTML](Polyglot_HTML "wikilink")
+-   [Semantic HTML](Semantic_HTML "wikilink")
+-   [SGML](SGML "wikilink")
+-   [W3C (X)HTML Validator](W3C_Markup_Validation_Service "wikilink")
+-   [XML](XML "wikilink")
 
 References
-
+----------
 
 External links
+--------------
 
--   WHATWG's HTML Living Standard
--   W3C's HTML 5.1, the upcoming version of HTML
--   W3C's HTML5, the most recent finished specification (28
-    October 2014)
--   W3C's HTML 4.01 specification (24 December 1999)
--   Dave Raggett's Introduction to HTML
--   Tim Berners-Lee Gives the Web a New Definition
+-   [WHATWG](WHATWG "wikilink")'s [HTML Living
+    Standard](http://whatwg.org/html)
+-   [W3C](W3C "wikilink")'s [HTML 5.1, the upcoming version of
+    HTML](http://www.w3.org/html/wg/drafts/html/master/)
+-   [W3C](W3C "wikilink")'s [HTML5, the most recent finished
+    specification (28
+    October 2014)](http://www.w3.org/TR/2014/REC-html5-20141028/)
+-   [W3C](W3C "wikilink")'s [HTML 4.01 specification (24
+    December 1999)](http://www.w3.org/TR/1999/REC-html401-19991224/)
+-   [Dave Raggett's Introduction to
+    HTML](http://www.w3.org/MarkUp/Guide/)
+-   [Tim Berners-Lee Gives the Web a New
+    Definition](http://computemagazine.com/man-who-invented-world-wide-web-gives-new-definition/)
 
-Category:HTML Category:1990 introductions Category:Markup languages
-Category:Technical communication Category:World Wide Web Consortium
-standards Category:Articles with example code
+<Category:HTML> [Category:1990
+introductions](Category:1990_introductions "wikilink") [Category:Markup
+languages](Category:Markup_languages "wikilink") [Category:Technical
+communication](Category:Technical_communication "wikilink")
+[Category:World Wide Web Consortium
+standards](Category:World_Wide_Web_Consortium_standards "wikilink")
+[Category:Articles with example
+code](Category:Articles_with_example_code "wikilink")
 
-[1] 
+[^1]: 
 
-[2] 
+[^2]: 
 
-[3] Tim Berners-Lee, “Information Management: A Proposal.” CERN (March
-1989, May 1990). W3.org
+[^3]: Tim Berners-Lee, “Information Management: A Proposal.” CERN (March
+    1989, May 1990).
+    [W3.org](http://www.w3.org/History/1989/proposal.html)
 
-[4] Tim Berners-Lee, “Design Issues”
+[^4]: Tim Berners-Lee, [“Design
+    Issues”](http://www.w3.org/DesignIssues/)
 
-[5] Tim Berners-Lee, “Design Issues”
+[^5]: Tim Berners-Lee, [“Design
+    Issues”](http://www.w3.org/DesignIssues/Uses.html)
 
-[6] 
+[^6]: 
 
-[7] 
+[^7]: 
 
-[8] 
+[^8]: 
 
-[9] 
+[^9]: 
 
-[10] 
+[^10]: 
 
-[11] 
+[^11]: 
 
-[12] 
+[^12]: 
 
-[13] 
+[^13]: 
 
-[14] 
+[^14]: 
 
-[15] 
+[^15]: 
 
-[16] 
+[^16]: 
 
-[17] 
+[^17]: 
 
-[18] 
+[^18]: 
 
-[19] 
+[^19]: 
 
-[20] 
+[^20]: 
 
-[21] 
+[^21]: 
 
-[22] 
+[^22]: 
 
-[23] 
+[^23]: 
 
-[24] Cs.Tcd.Ie. Cs.Tcd.Ie (2000-05-15). Retrieved on 2012-02-16.
+[^24]: [Cs.Tcd.Ie](https://www.cs.tcd.ie/15445/15445.HTML). Cs.Tcd.Ie
+    (2000-05-15). Retrieved on 2012-02-16.
 
-[25] 
+[^25]: 
 
-[26] 
+[^26]: 
 
-[27] 
+[^27]: 
 
-[28] 
+[^28]: 
 
-[29] 
+[^29]: 
 
-[30] 
+[^30]: 
 
-[31] 
+[^31]: 
 
-[32]  See section “Revision History”
+[^32]:  See section “Revision History”
 
-[33] 
+[^33]: 
 
-[34] 
+[^34]: 
 
-[35] 
+[^35]: 
 
-[36] 
+[^36]: 
 
-[37] 
+[^37]: 
 
-[38] 
+[^38]: 
 
-[39] 
+[^39]: 
 
-[40] 
+[^40]: 
 
-[41] 
+[^41]: 
 
-[42] 
+[^42]: 
 
-[43] 
+[^43]: 
 
-[44] 
+[^44]: 
 
-[45] 
+[^45]: 
 
-[46] 
+[^46]: 
 
-[47] 
+[^47]: 
 
-[48] 
+[^48]: 
 
-[49] 
+[^49]: 
 
-[50] 
+[^50]: 
 
-[51] 
+[^51]: 
 
-[52] 
+[^52]: 
 
-[53] 
+[^53]: 
 
-[54] 
+[^54]: 
 
-[55] 
+[^55]: 
 
-[56] 
+[^56]: 
 
-[57] 
+[^57]: 
 
-[58] 
+[^58]: 
 
-[59] 
+[^59]: 
 
-[60] 
+[^60]: 
 
-[61] 
+[^61]: 
 
-[62] 
+[^62]: 
 
-[63] Activating Browser Modes with Doctype. Hsivonen.iki.fi. Retrieved
-on 2012-02-16.
+[^63]: [Activating Browser Modes with
+    Doctype](http://hsivonen.iki.fi/doctype/). Hsivonen.iki.fi.
+    Retrieved on 2012-02-16.
 
-[64] 
+[^64]: 
 
-[65] 
+[^65]: 
 
-[66] 
+[^66]: 
 
-[67] 
+[^67]: 
 
-[68] 
+[^68]: 
 
-[69] 
+[^69]: 
 
-[70] 
+[^70]: 
 
-[71] 
+[^71]: 
 
-[72] 
+[^72]: 
 
-[73] 
+[^73]: 
 
-[74] 
+[^74]: 
 
-[75] “HTML: The Markup Language (an HTML language reference)”. Retrieved
-2013-08-19.
+[^75]: [“HTML: The Markup Language (an HTML language
+    reference)”](http://www.w3.org/TR/html-markup/syntax.html#doctype-syntax).
+    Retrieved 2013-08-19.
 
-[76] 
+[^76]: 
 
-[77]  This article notes that presentational HTML markup may be useful
-when targeting browsers “before Netscape 4.0 and Internet Explorer 4.0”.
-See the list of web browsers to confirm that these were both released in
-1997.
+[^77]:  This article notes that presentational HTML markup may be useful
+    when targeting browsers “before Netscape 4.0 and Internet Explorer
+    4.0”. See the [list of web
+    browsers](list_of_web_browsers "wikilink") to confirm that these
+    were both released in 1997.
 
-[78] 
+[^78]: 
 
-[79] 
+[^79]: 
 
-[80] 
+[^80]: 
 
-[81] 
+[^81]: 
 
-[82] 
+[^82]: 
 
-[83] 
+[^83]: 
 
-[84] HTML Design Constraints, W3C Archives
+[^84]: [HTML Design
+    Constraints](http://www.w3.org/History/19921103-hypertext/hypertext/WWW/MarkUp/HTMLConstraints.html),
+    W3C Archives
 
-[85] WWW:BTB – HTML, Pris Sears
+[^85]: [WWW:BTB –
+    HTML](http://ei.cs.vt.edu/~wwwbtb/book/chap13/who.html), Pris Sears
 
-[86] Freeman, E (2005). Head First HTML. O'Reilly.
+[^86]: Freeman, E (2005). Head First HTML. O'Reilly.
 
-[87] 
+[^87]: 
 
-[88] 
+[^88]: 
 
-[89] 
+[^89]: 
 
-[90] Sauer, C.: WYSIWIKI – Questioning WYSIWYG in the Internet Age. In:
-Wikimania (2006)
+[^90]: Sauer, C.: WYSIWIKI – Questioning WYSIWYG in the Internet Age.
+    In: Wikimania (2006)
 
-[91] Spiesser, J., Kitchen, L.: Optimization of HTML automatically
-generated by WYSIWYG programs. In: 13th International Conference on
-World Wide Web, pp. 355—364. WWW '04. ACM, New York, NY (New York, NY,
-U.S., May 17–20, 2004)
+[^91]: Spiesser, J., Kitchen, L.: Optimization of HTML automatically
+    generated by WYSIWYG programs. In: 13th International Conference on
+    World Wide Web, pp. 355—364. WWW '04. ACM, New York, NY (New York,
+    NY, U.S., May 17–20, 2004)
 
-[92] XHTML Reference: blockquote. Xhtml.com. Retrieved on 2012-02-16.
+[^92]: [XHTML Reference:
+    blockquote](http://xhtml.com/en/xhtml/reference/blockquote/).
+    Xhtml.com. Retrieved on 2012-02-16.
 
-[93] Doug Engelbart's INVISIBLE REVOLUTION . Invisiblerevolution.net.
-Retrieved on 2012-02-16.
+[^93]: [Doug Engelbart's INVISIBLE
+    REVOLUTION](http://www.invisiblerevolution.net/) .
+    Invisiblerevolution.net. Retrieved on 2012-02-16.
